package common

import (
	"encoding/json"
	"fmt"
)

// check interface
// var _ Series = (*SeriesMeta)(nil)
var _ Series = (*RawSeries)(nil)
var _ Series = (*IntSeries)(nil)
var _ Series = (*DoubleSeries)(nil)

const (
	TypeRawSeries = iota
	TypeIntSeries
	TypeDoubleSeries
	TypeBoolSeries
	TypeStringSeries
)

type Series interface {
	Hashable
	GetSeriesType() int64
	// NOTE: series decoded from JSON has 0 as SeriesID, so the implementation would recalculate the Hash
	GetSeriesID() SeriesID
}

// NOTE: The following struct for series are generated by proto in common.pb.go
//  SeriesMeta
//  IntSeries
//  DoubleSeries

// RawSeries is an intermediate struct for decoding json with mixed type of series in an array
type RawSeries struct {
	Meta   SeriesMeta      `json:"meta"`
	Points json.RawMessage `json:"points"`
}

func SeriesTypeString(seriesType int) string {
	switch seriesType {
	case TypeIntSeries:
		return "int"
	case TypeDoubleSeries:
		return "double"
	case TypeBoolSeries:
		return "bool"
	case TypeStringSeries:
		return "string"
	default:
		return fmt.Sprintf("unknown: %d", seriesType)
	}
}
